if("${CLANG_TOOLCHAIN_PATH}" STREQUAL "")
    message(FATAL_ERROR "CLANG_TOOLCHAIN_PATH not set")
endif()

set(CMAKE_SYSTEM_NAME "Cortex-M0plus")
set(CMAKE_SYSTEM_PROCESSOR arm)
set(CMAKE_C_COMPILER_FORCED TRUE)
set(CMAKE_CXX_COMPILER_FORCED TRUE)


set(CMAKE_C_COMPILER clang)
set(CMAKE_CXX_COMPILER clang++)

find_program(CMAKE_C_COMPILER NAMES clang PATHS ${CLANG_TOOLCHAIN_PATH}/bin/)
find_program(CMAKE_CXX_COMPILER NAMES clang++ PATHS ${CLANG_TOOLCHAIN_PATH}/bin/)
find_program(CMAKE_ASM_COMPILER NAMES clang PATHS ${CLANG_TOOLCHAIN_PATH}/bin/)
find_program(CMAKE_OBJCOPY NAMES llvm-objcopy PATHS ${CLANG_TOOLCHAIN_PATH}/bin/)
find_program(CMAKE_SIZE NAMES llvm-size PATHS ${CLANG_TOOLCHAIN_PATH}/bin/)
find_program(CMAKE_AR NAMES llvm-ar PATHS ${CLANG_TOOLCHAIN_PATH}/bin/)

set(CMAKE_C_COMPILER_ID Clang)
set(CMAKE_CXX_COMPILER_ID Clang)

set(CMAKE_EXECUTABLE_SUFFIX_C   .elf)
set(CMAKE_EXECUTABLE_SUFFIX_CXX .elf)
set(CMAKE_EXECUTABLE_SUFFIX_ASM .elf)

# SET(ARCH_FLAGS "-v")

# SET(CMAKE_C_FLAGS "${ARCH_FLAGS}" CACHE STRING "Common flags for C compiler")
# SET(CMAKE_ASM_FLAGS "${ARCH_FLAGS}" CACHE STRING "Common flags for assembler")
# SET(CMAKE_CXX_FLAGS "${ARCH_FLAGS}" CACHE STRING "Common flags for C++ compiler")